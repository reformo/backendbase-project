#!/usr/bin/env php
<?php
/**
 * Start, stop, and reload the HTTP server.
 *
 * @see       https://github.com/mezzio/mezzio-swoole for the canonical source repository
 * @copyright Copyright (c) 2018 Zend Technologies USA Inc. (https://www.zend.com)
 * @license   https://github.com/mezzio/mezzio-swoole/blob/master/LICENSE.md New BSD License
 */

declare(strict_types=1);

namespace Mezzio\Swoole\Command;

use PackageVersions\Versions;
use Symfony\Component\Console\Application as CommandLine;
use Symfony\Component\Console\CommandLoader\ContainerCommandLoader;
use Reformo\Common\Console\Swoole;
use Symfony\Component\Console\Input\ArgvInput;
use function chdir;
use function file_exists;
use function fwrite;
use function is_dir;
use function sprintf;
use function strstr;
use function str_repeat;

use const PHP_EOL;
use const STDERR;

// Setup/verify autoloading
$depth = 1;
while ($depth <= 4) {
    $dir = sprintf('%s/%s', __DIR__, str_repeat('../', $depth));
    if (is_dir($dir . 'vendor')) {
        $cwd = $dir;
    }

    $depth += 1;
}

if (! isset($cwd)) {
    fwrite(STDERR, 'Cannot locate autoloader; please run "composer install"' . PHP_EOL);
    exit(1);
}

chdir(dirname(__DIR__));

exec('composer clear-cache-files');

require 'vendor/autoload.php';

$options = new ArgvInput($argv);

if ($options->hasParameterOption('--module') === false) {
    fwrite(STDERR,
        "\e[38;5;196m Module name is required. i.e: --module=PrivateApi\e[0m".
        PHP_EOL
    );
    exit(1);
}
$module = $options->getParameterOption('--module');

// Setup/verify application DI container
$containerFile = sprintf('%s/src/Infrastructure/Ui/%s/config/container.php', getcwd(), $module);
if (! file_exists($containerFile)) {
    fwrite(STDERR, sprintf(
        'No container file (%s) detected; are you in an Expressive application?%s',
        $containerFile,
        PHP_EOL
    ));
    exit(1);
}

$container = require $containerFile;
$version   = strstr(Versions::getVersion('mezzio/mezzio-swoole'), '@', true);

// Create, populate, and run the CLI tooling
$commandLine = new CommandLine('Expressive web server', $version);
$commandLine->setAutoExit(true);
$commandLine->setCommandLoader(new ContainerCommandLoader($container, [
    'reload' => Swoole\ReloadCommand::class,
    'start'  => Swoole\StartCommand::class,
    'status' => Swoole\StatusCommand::class,
    'stop'   => Swoole\StopCommand::class,
]));
$commandLine->run();
